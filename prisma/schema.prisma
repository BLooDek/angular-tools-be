// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  password String
  createdAt DateTime @default(now())
  tabs tabs[]
  notes notes[]
  todo todo[]
  todoNotification todoNotification[]
}
model tabs {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  title     String
  type       String
  active     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  notes notes[]
  todo todo[]
}

model notes {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String   @db.ObjectId
    tabId     String   @db.ObjectId
    content   String
    title   String
    active     Boolean @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id])
    tab       tabs     @relation(fields: [tabId], references: [id])
}

model todo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  tabId     String   @db.ObjectId
  title     String
  content   String
  completed Boolean @default(false)
  notify    Boolean @default(false)
  notifyAt  DateTime?
  active     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  tab       tabs     @relation(fields: [tabId], references: [id])

  todoNotification todoNotification[]
}

model todoNotification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  todoId    String   @db.ObjectId
  userId    String   @db.ObjectId
  notifiedAt DateTime @default(now())
  todo      todo     @relation(fields: [todoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}